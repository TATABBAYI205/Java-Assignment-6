Difference b/w List and set:-
============================
In Java, the `List` and `Set` interfaces are both subtypes of the `Collection` interface and represent different types of collections. Here are the main differences between `List` and `Set`:

1. Ordering: `List` is an ordered collection, meaning that the elements in a list are maintained in a specific order based on their insertion position. Each element in a list has an associated index that determines its position. On the other hand, `Set` is an unordered collection, and it does not maintain any particular order of elements. The focus of a set is on uniqueness rather than ordering.

2. Duplicate Elements: `List` allows duplicate elements, meaning that it can contain multiple elements that are equal to each other. Each element in a list is considered distinct and has a separate position within the ordered sequence. In contrast, `Set` does not allow duplicate elements. It ensures that each element in the set is unique. Adding a duplicate element to a set has no effect, and it will not be stored in the set.

3. Retrieval: In a `List`, elements can be accessed by their index using methods like `get(int index)` or by iterating over the elements. The position of an element in a list is determined by its index value. On the other hand, since `Set` is an unordered collection, there is no direct way to retrieve elements by their position or index. Elements in a set can be retrieved by iterating over the set or by using methods like `contains(Object obj)` to check for the presence of a specific element.

4. Performance Characteristics: `List` implementations such as `ArrayList` and `LinkedList` provide efficient access and manipulation of elements by index, making them suitable for scenarios that require frequent random access and modification. `Set` implementations like `HashSet` and `TreeSet` prioritize efficient element lookup and uniqueness, making them ideal for scenarios that require fast membership testing and elimination of duplicates.

When choosing between `List` and `Set`, consider the ordering and uniqueness requirements of your data. If you need to maintain an ordered sequence of elements or allow duplicates, `List` is a suitable choice. If you require uniqueness and do not need to maintain a specific order, `Set` is more appropriate.